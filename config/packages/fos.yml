fos_http_cache:
    # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/tags.html
    tags:
        enabled: true
        response_header: Surrogate-Key

    # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/proxy-client.html
    proxy_client:
        varnish:
            # Not used, as we have configured Fastly in cache_manager.custom_proxy_client
            # go to xkey branch to see Varnish in use
            tags_header: Surrogate-Key
            tag_mode: purgekeys
            http:
                servers:
                    - '%env(PURGE_SERVER)%'
                #base_url: yourwebsite.com

    # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/cache-manager.html
    cache_manager:
        enabled: true
        custom_proxy_client: App\ProxyClient\Fastly

    # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/headers.html
    cache_control:
        defaults:
            overwrite: true
        rules:
            # We could set cache headers in config if we did not have access to edit controller.
            #
            # Example here is using reverse_proxy_ttl here to avoid other proxies caching the page:
            # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/headers.html#reverse-proxy-ttl
            # This is useful if you are caching content for logged in users..

            # match post action of BlogController
            -
                match: { path: .*/blog/posts/.* }
                headers:
                    cache_control: { public: true, max_age: 3600 }
                    # Ideally we would like to use this instead, maybe abstracted via FOS's reverse_proxy_ttl header.
                    # https://docs.fastly.com/guides/performance-tuning/controlling-caching#changing-caching-times-for-different-users
                    #Surrogate-Control: 'max-age=3600'

            # match index action of BlogController
            -
                match: { path: .*/blog/$ }
                headers:
                    cache_control: { public: true, max_age: 3600 }
                    #Surrogate-Control: 'max-age=3600'

    # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/user-context.html
    user_context:
        enabled: true
        hash_cache_ttl: 900
        # By default we enable role_provider so user context hash varies by symfony role which is everything we need on demo here.
        # Custom providers is also possible in case of more advance roles logic or other factors that should be part of hash:
        # https://foshttpcachebundle.readthedocs.io/en/latest/reference/configuration/user-context.html#custom-context-providers
        role_provider: true
        # By default FOS Http cache has this enabled. As we want to opt in, we disable and add headers in controller
        always_vary_on_context_hash: false
        # Disabled for Fastly as it currently depends on Ban support (user context invalidation will be changed to tags in the future)
        logout_handler:
            enabled: false
